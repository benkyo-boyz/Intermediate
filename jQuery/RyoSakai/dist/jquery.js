(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

module.exports = function (obj, callback) {
  if ($.isArray(obj)) {
    var i = 0,
        l = obj.length;
    for (; i < l; i++) {
      callback(obj[i], i);
    }
  } else {
    for (var key in obj) {
      callback(key, obj[key]);
    }
  }
};

},{}],2:[function(require,module,exports){
"use strict";

module.exports = function (obj) {
  return Object.prototype.toString.call(obj) === "[object Array]";
};

},{}],3:[function(require,module,exports){
'use strict';

(function () {

  var $ = function $(selector, context) {
    return new Core(selector, context);
  };

  $.isArray = require('./isArray');
  $.each = require('./each');

  var Core = function Core(selector, context) {
    context = context || document;
    var elems = context.querySelectorAll(selector);
    Array.prototype.push.apply(this, elems);
    this.context = context;
    this.selector = selector;
    return this;
  };

  Core.prototype = {

    trim_full: function trim_full(text) {
      return text.replace(/^[¥s ]+|[¥s ]+$/g, '');
    },

    toggleClass: function toggleClass(name, mode_value) {
      var mode = mode_value || 0;
      var set_list = this.trim_full(name).split(' ');
      var elem, setName, base_list, index;
      for (var i = 0, len = this.length; i < len; i++) {
        elem = this[i];
        if (elem.nodeType !== 1) {
          continue;
        }

        if (this.trim_full(elem.className) == '') {
          base_list = [];
        } else {
          base_list = elem.className.split(' ');
        }

        for (var j = 0, l = set_list.length; j < l; j++) {
          setName = this.trim_full(set_list[j]);
          if (setName == '') {
            continue;
          }

          index = base_list.indexOf(setName);
          if (mode == 1 && index > -1 || mode == 2 && index < 0) {
            continue;
          } else if (!mode) {
            index < 0 ? mode = 1 : mode = 2;
          }

          if (mode == 1) {
            base_list.push(setName);
          } else {
            base_list.splice(index, 1);
          }
        }
        elem.className = base_list.join(' ');
      }
      return this;
    },

    addClass: function addClass(name) {
      return this.toggleClass(name, 1);
    },

    removeClass: function removeClass(name) {
      return this.toggleClass(name, 2);
    },

    find: function find(name) {
      console.log(this.length);
      for (var i = 0, len = this.length; i < len; i++) {
        var elem = this[i];
        ///console.log(elem);
        var elems = elem.querySelectorAll(name);
        console.log(elems);
      }
    },

    css: function css() {},

    each: function each(callback) {
      var i = 0,
          l = this.length;
      for (; i < l; i++) {
        callback.call(this, this[i], i);
      }
    },

    get: function get(index) {
      var ret = [],
          l = this.length;
      for (var i = 0; i < l; i++) {
        ret.push(this[i]);
      }
      if (typeof index === 'number') {
        ret = ret[index];
      }
      return ret;
    },

    splice: Array.prototype.splice

  };

  window.$ = $;

  require('./test');
})();

},{"./each":1,"./isArray":2,"./test":4}],4:[function(require,module,exports){
'use strict';

$.each(['a', 'b', 'c'], function (e, i) {
  console.log(e, i);
});
/*
$.each({
  a: 'apple',
  b: 'banana',
  c: 'chocolate'
}, (k, v) => {
  console.log(k, v);
});

console.log($('body'));
console.log($('div'));
console.log($('div').get());
console.log($('div').get(0));
//$('body').addClass('hoge');
$('div').each(function (e, i) {
  console.log(e);
});
*/
//var a = ['','a'];
//console.log(a.join(' '));
//console.log($('body').addClass('test1 test2').removeClass('test1'));
//console.log($('div').addClass('test1 test2 test3').removeClass('test2'));
//console.log($('div').addClass('test2 test3').toggleClass('test1'));

$('div').find('ul');

$.each('body', function () {});
/*
$.each(['a','b','c'], function() {
  $(this).addClass('test');
});
*/

//$(e).addClass('test');
//console.log('--');
//console.log($(this).get(0));
//console.log($.addClass('test'));

//$(this).addClass('test');

},{}]},{},[3])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
